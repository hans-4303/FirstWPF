<!-- XAML 주석은 이렇게 작성 -->
<!-- 초기 세팅은 다음과 같음:
1. Window -> NavigationWindow
2. NavigationWindow 태그 사이에서 Grid 요소 제거
3. Height: 350, Width: 500 -->
<!-- 다음 셋팅은 다음과 같음:
1. 현재 프로젝트에서 추가 - 페이지 WPF
2. 이름 입력 후 추가: 현재 프로젝트의 파일들과 같은 레벨에 생성됨
3. Title 수정 및 DesignHeight, DesignWidth를 MainWindow와 맞추기
4. MainWindow.xaml에서 Source 속성 추가해주기
(현재는 MainWindow 파일과 같은 레벨에 만들어져서 경로 지정 필요 없었음)
5. 속성 창의 기타 범주에서 원본 속성을 지정할 수도 있음
(파일 이름을 우클릭하지 말고, xaml을 띄운 채 우클릭해서 속성 - 기타 범주로) -->
<!-- 다음 셋팅은 다음과 같음:
1. xaml 파일을 확장할 시 xaml.cs 파일들을 볼 수 있음
2. ExpenseReportPage.xaml.cs, ExpenseItHome.xaml.cs 열기 -->
<!-- 이미지 추가 작업:
1. 프로젝트 노드를 우클릭해서 추가 - 기존 항목 클릭 or
Shift + Alt + A 누르기
2. 항목 추가 대화 상자가 뜸, !! 반드시 파일 필터를 모든 파일 또는 이미지 파일로 설정하고 추가 누를 것
3. 성공 시 다른 파일들과 같은 레벨에 이미지 파일 확인 가능
4. 솔루션 탐색기에서 이미지 파일 선택하고 우클릭으로 속성 창
5. 빌드 작업: Resource로 속성 변경하기 -->
<!-- 앱 빌드 및 실행: F5 버튼 누르거나 디버그 메뉴에서 디버깅 시작
편집기로 돌아가기: 뜬 창을 닫기 -->
<!-- 레이아웃 만들기:
레이아웃은 UI 요소 배치 순서가 지정된 방법을 제공
일반적으로 사용하는 레이아웃 컨트롤들:
Canvas: 캔버스 영역에 비례하는 좌표 사용하고 자식 요소 위치를 명시적으로 지정할 수 있는 영역 정의
DockPanel: 자식 요소를 서로 맞춰 가로 또는 세로로 정렬할 수 있는 영역 정의
Grid: 가로 또는 세로 방향으로 한 줄로 자식 요소 정렬
VirtualizingStackPanel: 가로 또는 세로 방향으로 한 줄로 콘텐츠 정렬하고 가상화(??)함
WrapPanel: 콘텐츠를 컨테이너의 가장자리에서 다음 줄로 나눠 왼쪽에서 오른쪽으로 자식 요소의 위치를 지정,
이후에는 Orientation 속성 값에 따라 순서가 위에서 아래로 또는 오른쪽에서 왼쪽으로 순차적으로 지정됨
-->
<NavigationWindow x:Class="_WPF_01.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:_WPF_01"
    mc:Ignorable="d"
    Title="MainWindow" Height="350" Width="500"
    Source="ExpenseItHome.xaml">
</NavigationWindow>
